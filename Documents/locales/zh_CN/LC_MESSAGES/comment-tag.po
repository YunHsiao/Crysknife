# SPDX-FileCopyrightText: 2024 Yun Hsiao Wu <yunhsiaow@gmail.com>
# SPDX-License-Identifier: MIT
msgid ""
msgstr ""
"Project-Id-Version: Crysknife \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-06 16:20+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../comment-tag.rst:8
msgid "Comment Tag Formatting"
msgstr "注释桩格式"

#: ../../comment-tag.rst:10
msgid ""
"It is not uncommon for projects to have in-house coding standards, "
"especially wrt. modifications inside the engine source folder, there are "
"usually some special marks, i.e. Comment tags."
msgstr "项目代码库通常都有自己的内部代码规范，特别是引擎源码文件夹的修改常有特殊标记，既“注释桩”。"

#: ../../comment-tag.rst:14
msgid "Crysknife handles this in :ref:`Config`, through :ref:`Builtin`:"
msgstr "本项目通过 :ref:`Config` 中的 :ref:`Builtin` 支持此类需求："

#: ../../comment-tag.rst:16
msgid "Here's an example of comment tag format customization:"
msgstr "以下是一个注释桩格式的定制样例："

#: ../../comment-tag.rst:41
msgid ""
"The ``RE`` configs are regular expression patterns when matching existing"
" code bases. The ``CTOR`` configs are values used to re-construct the "
"comment tag from patches. You can specify custom captures with explicit "
"group name ``Capture${Index}``, and reference them accordingly in "
"reconstructors."
msgstr ""
"``RE`` 结尾的配置是匹配已有代码时使用的正则表达式，``CTOR`` 结尾的配置是从 Patch 重建注释桩时使用的值。可以使用形如 "
"``Capture${Index}`` 的名称显式指定捕获组，然后在重建时引用。"

#: ../../comment-tag.rst:45
msgid ""
"A good place to put these is inside "
"``Crysknife/BaseCrysknife${YourEngineName}Local.ini``, which is effective"
" across all plugins inside the same repo."
msgstr ""
"一个适合保存这些配置的地方是 ``Crysknife/BaseCrysknife${YourEngineName}Local.ini`` "
"文件内，这里的配置会对相同仓库内的所有扩展生效。"

#: ../../comment-tag.rst:48
msgid ""
"Besides, note the ``CRYSKNIFE_LOCAL_CONFIG_PREDICATE`` variable, which "
"will only enable this whole config file inside when operating inside "
"internal repo, i.e. any other linked stock repos can keep the default "
"comment tag format. In fact with this mechanism you can customize any "
"config you need on a repo-to-repo basis."
msgstr ""
"注意 ``CRYSKNIFE_LOCAL_CONFIG_PREDICATE`` "
"变量，这里它约束整个配置文件只在内部引擎仓库生效，也就是说在其他同时链接的官版仓库依然可以保持默认注释桩格式。实际上基于这套机制你可以为不同代码仓库自由定制任何配置。"

#: ../../comment-tag.rst:53
msgid ""
"Also if you have engine-specific code inside your plugin folder, remember to "
"guard them with macros which can be defined in plugin local configs "
"(``SourcePatch/Crysknife${YourEngineName}Local.ini``), whose name must "
"match with the relevant base config. Plugin local configs are active iff "
"the base config with the same name is active."
msgstr "另外如果在扩展文件夹内有引擎相关的代码，记得要加宏保护，宏本身可以定义在扩展的本地配置内 (``SourcePatch/Crysknife${YourEngineName}Local.ini``)。"
"这个配置的文件名要和前述的本地 Base 配置文件名相同，当且仅当对应的本地 Base 配置生效时生效。"

#: ../../comment-tag.rst:59
msgid ""
"For UBT to cope with the above usages under :ref:`Iteration` environment, "
"Crysknife generates an engine-specific config cache directly at "
"``Plugins/CrysknifeCache.ini``, which should always be commited to your "
"internal engine repo."
msgstr "为了让 UBT 能在 :ref:`Iteration` 环境下适配以上机制，Crysknife 会自动生成一个缓存文件到 ``Plugins/CrysknifeCache.ini``，别忘了要将这个文件也提交到内部仓库。"

